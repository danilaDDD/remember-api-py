# Generated by Django 5.1.6 on 2025-04-28 13:51

import ckeditor_uploader.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InfoCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('question', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Вопрос')),
                ('answer', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Ответ')),
                ('tags_text', models.CharField(max_length=255, verbose_name='Теги')),
                ('closed', models.BooleanField(default=True, verbose_name='Закрыто')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_cards', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Информационная карточка',
                'verbose_name_plural': 'Информационные карточки',
            },
        ),
        migrations.CreateModel(
            name='Remember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('day', models.DateField(blank=True, null=True, verbose_name='День')),
                ('real_answer', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Реальный ответ')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('sent', 'Отправлен'), ('true', 'Отвечен правильно'), ('false', 'Отвечен неправильно'), ('no_answer', 'Не отвечен')], default='new', max_length=20, verbose_name='Статус')),
                ('info_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remembers', to='infocard.infocard', verbose_name='Карточка')),
            ],
            options={
                'verbose_name': 'Повторение',
                'verbose_name_plural': 'Повторения',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tags', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='InfoCardTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('info_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_items', to='infocard.infocard')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_items', to='infocard.tag')),
            ],
            options={
                'verbose_name': 'Информационная карта - тег',
                'verbose_name_plural': 'Информационная карта - тег',
            },
        ),
    ]
